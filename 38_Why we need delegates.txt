38_Why we need delegates-
*********************************
so that we dod not hard code any logic in our framework classes-

using System;
using System.Collections.Generic;

class Program
{
    public static void Main()
    {
        List<Employee> emlist = new List<Employee>();
        emlist.Add(new Employee()
        {
            Id = 1,
            Name = "Gaurav",
            Salary = 12345,
            Experience = 6
        });
        emlist.Add(new Employee()
        {
            Id = 2,
            Name = "Rattan",
            Salary = 45,
            Experience = 2
        });

        promotable pdel = new promotable(promote);//delegate instance

        Employee.Promoteemp(emlist, pdel);//passing dat to the delegate
    }

        public static bool promote(Employee emp)//method that gets passed to delegate
       {
        if (emp.Experience > 5)
        {
            return true;
        }
        else
        { return false;
        }
    }

    }



public delegate bool promotable(Employee emp1);//created a delagate
public class Employee
{
    public int Id { get; set; }
    public string Name { get; set; }
    public int Salary { get; set; }
    public int Experience { get; set; }

    public static void Promoteemp(List<Employee> emplist,promotable iseligible)//pass delegate instance
    {
        foreach (Employee emp in emplist)
        {
            if (iseligible(emp))//we will check the condition for delegate instance
            {
                Console.WriteLine(emp.Name + "is Promoted");
            }
        }
    }


}


*****************************************************************

Without delegate using lambda exxpressions-


using System;
using System.Collections.Generic;

class Program
{
    public static void Main()
    {
        List<Employee> emlist = new List<Employee>();
        emlist.Add(new Employee()
        {
            Id = 1,
            Name = "Gaurav",
            Salary = 12345,
            Experience = 6
        });
        emlist.Add(new Employee()
        {
            Id = 2,
            Name = "Rattan",
            Salary = 45,
            Experience = 2
        });

  

        Employee.Promoteemp(emlist, emp => emp.Experience >5);//using lambda expresions.
    }

      

    }



public delegate bool promotable(Employee emp1);
public class Employee
{
    public int Id { get; set; }
    public string Name { get; set; }
    public int Salary { get; set; }
    public int Experience { get; set; }

    public static void Promoteemp(List<Employee> emplist,promotable iseligible)
    {
        foreach (Employee emp in emplist)
        {
            if (iseligible(emp))
            {
                Console.WriteLine(emp.Name + "is Promoted");
            }
        }
    }


}


